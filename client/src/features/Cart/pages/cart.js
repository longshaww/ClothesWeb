import globalStateAndAction from '../../../container/global.state.action';
import '../../../assets/styles/cart.detail.css';
import ReplyIcon from '@mui/icons-material/Reply';
import { Link } from 'react-router-dom';
import ClearIcon from '@mui/icons-material/Clear';
import { useRef } from 'react';
import axiosMethod from '../../../middlewares/axios';
import { Breadcrumb, BreadcrumbItem } from 'reactstrap';
import Toast from '../../../utils/toast';

function Cart({ cart, setCart }) {
    const cartCount = cart.cartCount;
    const cartStore = cart.cartStore;
    const cartTotalPrice = cart.cartTotalPrice;

    const handleDelClick = (idProduct, size) => {
        deleteCart(idProduct, size);
    };

    async function handleChangeQty(idProduct, qty, size) {
        try {
            const data = await axiosMethod(`cart/changeQty`, 'put', {
                idProduct,
                qty,
                size,
            });
            setCart(data.cartQty, data, data.cartTotal);
        } catch (err) {
            Toast.fire({ title: err.response.data.message, icon: 'error' });
        }
    }
    async function deleteCart(idProduct, size) {
        const data = await axiosMethod(`cart/${idProduct}`, 'delete', {
            size,
        });
        if (data.success) {
            setCart(data.cartQty, data, data.cartTotal);
            Toast.fire({
                title: 'ƒê√£ x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng',
                icon: 'success',
            });
        }
    }

    return (
        <>
            <Breadcrumb className="bg-light">
                <div className="container">
                    <BreadcrumbItem className="d-inline-block">
                        <Link to="/" className="nav-link">
                            Trang ch·ªß
                        </Link>
                    </BreadcrumbItem>
                    <BreadcrumbItem className="d-inline-block">
                        <span to="#" className="nav-link text-muted">
                            Gi·ªè h√†ng {`(${cartCount})`}
                        </span>
                    </BreadcrumbItem>
                </div>
            </Breadcrumb>
            <div className="container">
                <div className="text-center mb-4">
                    <h2>Gi·ªè h√†ng c·ªßa b·∫°n</h2>
                    <p className="m-0">C√≥ {cartCount} s·∫£n ph·∫©m trong gi·ªè h√†ng</p>
                    <div>___________________________</div>
                </div>
                <div className="row">
                    <div className="col">
                        <table className="table">
                            <tbody>
                                {cartStore.cart && cartStore.cart.length > 0 ? (
                                    cartStore.cart.map((item, index) => {
                                        return (
                                            <tr key={index}>
                                                <td className="cart-product-img">
                                                    <img
                                                        src={item.img}
                                                        alt=""
                                                        className="border"
                                                    ></img>
                                                </td>
                                                <td className="cart-product-content">
                                                    <p className="cart-name-size">
                                                        <Link
                                                            to={`/product/${item.idProduct}`}
                                                            className="d-block"
                                                        >
                                                            {item.name}
                                                        </Link>
                                                        <span>{item.size}</span>
                                                    </p>
                                                    <div className="d-flex justify-content-between cart-price-qty">
                                                        <div className="d-inline-flex rounded quantity p-0">
                                                            <button
                                                                onClick={() =>
                                                                    handleChangeQty(
                                                                        item.idProduct,
                                                                        -1,
                                                                        item.size
                                                                    )
                                                                }
                                                                className="btn btn-light"
                                                            >
                                                                -
                                                            </button>
                                                            <div
                                                                className="d-flex justify-content-center align-items-center h-100 fw-bold"
                                                                style={{ width: '1rem' }}
                                                            >
                                                                {item.qty}
                                                            </div>
                                                            <button
                                                                onClick={() =>
                                                                    handleChangeQty(
                                                                        item.idProduct,
                                                                        1,
                                                                        item.size
                                                                    )
                                                                }
                                                                className="btn btn-light"
                                                            >
                                                                +
                                                            </button>
                                                        </div>
                                                        <div className="fw-bold">
                                                            {`${item.total.toLocaleString()},000ƒë`}
                                                        </div>
                                                    </div>
                                                    <div className="cart-btn-del">
                                                        <ClearIcon
                                                            onClick={() =>
                                                                handleDelClick(
                                                                    item.idProduct,
                                                                    item.size
                                                                )
                                                            }
                                                        ></ClearIcon>
                                                    </div>
                                                </td>
                                            </tr>
                                        );
                                    })
                                ) : (
                                    <tr>
                                        <td className="text-center">Kh√¥ng c√≥ s·∫£n ph·∫©m</td>
                                    </tr>
                                )}
                            </tbody>
                        </table>
                        <div className="row">
                            <div className="col-5">
                                <h5>Ghi ch√∫ ƒë∆°n h√†ng</h5>
                                <div className="form-floating">
                                    <textarea
                                        className="form-control"
                                        placeholder="Ghi ch√∫"
                                        id="note-text-area"
                                    ></textarea>
                                    <label for="note-text-area">Ghi ch√∫</label>
                                </div>
                            </div>
                            <div className="col">
                                <h5>Ch√≠nh s√°ch mua h√†ng</h5>
                                <ul className="list-privacy">
                                    <li>
                                        Kh√°ch h√†ng c√≥ th·ªÉ ƒë·ªïi size s·∫£n ph·∫©m trong v√≤ng 3 NG√ÄY k·ªÉ t·ª´
                                        l√∫c nh·∫≠n ƒë∆∞·ª£c s·∫£n ph·∫©m. Ph√≠ ship 2 chi·ªÅu ƒë·ªÉ ƒë·ªïi size l√† 60k
                                        (ch·ªâ ƒë·ªïi 01 l·∫ßn duy nh·∫•t).
                                    </li>
                                    <li>
                                        ƒê·ªëi v·ªõi s·∫£n ph·∫©m b·ªã l·ªói ( ƒê·ª©t n√∫t, v·∫•y b·∫©n, l·ªói s·∫£n
                                        xu·∫•t,...) b·∫°n vui l√≤ng ch·ª•p l·∫°i ph·∫ßn l·ªói v√† g·ª≠i cho Team
                                        m√¨nh check l·∫°i v√† ti·∫øn h√†nh ƒë·ªïi s·∫£n ph·∫©m m·ªõi cho b·∫°n hen ü•∞
                                        - Chi ph√≠ ƒë·ªïi s·∫£n ph·∫©m s·∫Ω do Team m√¨nh thanh to√°n ·∫°.
                                    </li>
                                    <li>
                                        Ch·ªâ ƒë·ªïi size trong tr∆∞·ªùng h·ª£p s·∫£n ph·∫©m c√≤n size/ h√†ng. Kh√¥ng
                                        nh·∫≠n tr·∫£ s·∫£n ph·∫©m/ho√†n ti·ªÅn/ƒë·ªïi sang s·∫£n ph·∫©m kh√°c.
                                    </li>
                                    <li>
                                        C√°c s·∫£n ph·∫©m mua trong d·ªãp Sale kh√¥ng h·ªï tr·ª£ ƒë·ªïi size, ƒë·ªïi
                                        m·∫´u. Ch·ªâ ƒë·ªïi n·∫øu c√≥ l·ªói t·ª´ ph√≠a nh√† s·∫£n xu·∫•t.
                                    </li>
                                    <li>Ch·ªâ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m c√≤n bill,c√≤n tag.</li>
                                    <li>
                                        ƒê∆°n h√†ng tr√™n 1 tri·ªáu, vui l√≤ng chuy·ªÉn kho·∫£n tr∆∞·ªõc 50% qua
                                        s·ªë t√†i kho·∫£n: üì∑ Techcombank 19036662605013 Ch·ªß t√†i kho·∫£n
                                        TR√ÇÃÄN NH∆Ø HAÃâO Chi NhaÃÅnh VƒÉn ThaÃÅnh ‚Äî‚Äî-‚Äî‚Äî‚Äî Th√¥ng tin chuy·ªÉn
                                        kho·∫£n : t√™n b·∫°n + sƒët (+ m√£ ƒë∆°n HC... ) Sau khi nh·∫≠n ƒë∆∞·ª£c
                                        chuy·ªÉn kho·∫£n HIGHCLUB s·∫Ω ti·∫øn h√†nh g·ªçi x√°c nh·∫≠n v√† l√†m ƒë∆°n.
                                        Xin c·∫£m ∆°n ! Trong th·ªùi ƒëi·ªÉm hi·ªán t·∫°i do ·∫£nh h∆∞·ªüng c·ªßa
                                        Covid-19, th·ªùi gian giao h√†ng c√≥ th·ªÉ thay ƒë·ªïi khi·∫øn b·∫°n nh·∫≠n
                                        ƒë∆∞·ª£c h√†ng l√¢u h∆°n so v·ªõi th·ªùi gian d·ª± ki·∫øn. R·∫•t mong qu√Ω
                                        kh√°ch h√†ng th√¥ng c·∫£m
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div className="col-4">
                        <div className="right-card p-3 border rounded shadow">
                            <h4 className="border-bottom py-2">Th√¥ng tin ƒë∆°n h√†ng</h4>
                            <p className="py-2 border-bottom fw-bold">
                                T·ªïng ti·ªÅn:
                                <span className="float-end text-danger">
                                    {`${cartTotalPrice.toLocaleString()},000ƒë`}
                                </span>
                            </p>
                            <p>
                                Ph√≠ v·∫≠n chuy·ªÉn s·∫Ω ƒë∆∞·ª£c t√≠nh ·ªü trang thanh to√°n. B·∫°n c≈©ng c√≥ th·ªÉ nh·∫≠p
                                m√£ gi·∫£m gi√° ·ªü trang thanh to√°n.
                            </p>
                            {cartStore.cart && cartStore.cart.length === 0 ? (
                                <button className="btn btn-danger button-card mb-2" disabled>
                                    Thanh to√°n
                                </button>
                            ) : (
                                <Link to="/checkout">
                                    <button className="btn btn-danger button-card mb-2">
                                        Thanh to√°n
                                    </button>
                                </Link>
                            )}
                            <p className="text-center">
                                <Link to="/collections" className="text-dark text-center">
                                    <ReplyIcon></ReplyIcon>
                                    Ti·∫øp t·ª•c mua h√†ng
                                </Link>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </>
    );
}

export default globalStateAndAction(Cart);
